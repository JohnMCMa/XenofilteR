%\VignetteIndexEntry{XenofilteR}
%\VignetteDepends{XenofilteR}
%\VignetteKeywords{Filtering of xenograft sequence data for reads that originate from the host.}
%\VignettePackage{XenofilteR}
%\VignetteEngine{utils::Sweave}

\documentclass{article}

<<style-Sweave, eval=TRUE, echo=FALSE, results=tex>>=
BiocStyle::latex()
@

\newcommand{\exitem}[3]{%
  \item \texttt{\textbackslash#1\{#2\}} #3 \csname#1\endcsname{#2}.%
}

\title{\bf XenofilteR: filter reads from xenograft sequencing.}
\author{Oscar Krijgsman}

\begin{document}
\SweaveOpts{concordance=TRUE}

\maketitle

\begin{center}
  Department of Molecular Oncology \\*
  Netherlands Cancer Institute \\*
  The Netherlands \\*
\end{center}

\begin{center}
  \email{o.krijgsman@nki.nl}
\end{center}

\tableofcontents

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

\section{Overview}

Human tumor samples or cell lines grown in immuno-deficient mice are a common model used in cancer research. Despite its common use of these xenografts, genomic analysis of tumor material derived from xenografts is challenging. The sequenced sample not only contains reads that originate from the graft (e.g. human tumor or cell line) but also read derived from host (mouse) stroma. Here we show the large effects the host-derived sequence reads can have on downstream analysis of sequence data from xenografts and developed a method to overcome these challenges. 
Our tool, XenofilteR, assesses for each sequence read whether it matches the graft or the host reference genome better, based on mapping quality together with multiple values that indicate the edit distance to the reference. XenofilteR output is a bam file with the reads that map to mouse removed. We validated XenofilteR on in-silico data and large sets of PDX samples, both DNA and RNA sequencing and show our method outperforms existing methods.


\section{XenofilteR workflow}

Xenofilter uses 2 bam files as input. The first of the reads mapped to the human reference, the second of the same reads maped to the mouse genome. Based on these 2 bam files XenofilteR assigns a read to either graft or host. To do this the following steps are performed:

\begin{itemize}
    \item Read read name, mapping quality, cigar string and number of mismatches from mouse bam file
    \item Read read name, mapping quality, cigar string and number of mismatches from human bam file
    \item Calculates the number of mismatches and adds these to the clips and inserts (from cigar)
    \item Calculates the two MapScores for each reads (MapScore for mapping to human and mouse reference genome)
    \item Assigns each read (or read-pair in case of PE experiments) to either human or mouse
    \item The bam file of the reads mapped to teh human references is filtered for mouse reads
\end{itemize}

\section{Analysis workflow}

In this analysis workflow we will use XenofilteR to filter patient derived xenograft exome sequencing data for mouse reads. The data is available through the European Genome-phenome Archive (EGA website here,  accession number EGAS00001000415). Here, we use only the reads that map to the gene NRAS in in hg19. The bam files, both mapped against human and mouse reference, are available within this r-package. We wil show the usage of XenofilteR with these two premapped files distributed with this package. 
XenofilteR requires a dataframe or matrix with in the first column the bam file names as mapped to the graft reference. The second contains the file names and paths to the bam files as mapped to the host reference. Each row in Samplelist represents a single sample. 
The XenofilteR package and data are loaded in the following way: 

<<load.XenofilteR, print=FALSE, eval=TRUE>>=
library(XenofilteR)

path <- dir(system.file(package = "XenofilteR"), "extdata", full.names = TRUE)
samples <- list.files(path = path, pattern = ".bam$", full.names = TRUE)

Sample_list <- data.frame(samples[1], samples[2])
@

\subsection{\Biocpkg{BiocParallel} for parallel computing}

XenofilteR fully supports paralel computing and is implemented in such a way
that every sample is processed on a single core. XenofilteR uses the
\Biocpkg{BiocParallel} for parallel computing. This package requires the user to
specify which parallel environment is used by creating an instance of
\Rcode{BiocParallelParam}. In the example case, we are using the \Rcode{snow}
environment and specify a \Rcode{SnowParam}:

<<create.BiocParallelParam, print=FALSE, eval=TRUE>>=
bp.param <- SnowParam(workers = 1, type = "SOCK")
bp.param
@

For using other instances of the \Rcode{BiocParallelParam} parameter, please
refer to the \Biocpkg{BiocParallel} package vignette. The bp.param parameter can
now be passed on to \Rcode{XenofilteR()} to allow parallel computation.

\subsection{\Rcode{XenofilteR()}}
The full analysis of xenograft data with XenofilteR includes a single step, \Rcode{Xenofilter()}. 

<<XenofilteR, print=FALSE, eval=TRUE>>=
XenofilteR(Sample_list, destination.folder = "./", bp.param = bp.param)
@

The destination.folder argument determines in which folder the output folder is
going to be placed. XenofilteR will create a new folder named CNAprofiles in the directory specified
by destination.folder. This folder contains the following files:

\section{Troubleshooting}

We maintain a troubleshooting GitHub page where various issues are discussed
that have been raised by XenofilteR users. Please follow this link:
\url{https://github.com/PeeperLab/XenofilteR#troubleshooting}.

\newpage

\section{Session Information}

The version number of \R{} and packages loaded for generating the vignette were:
<<sessionInfo, results=tex, print=TRUE, eval=TRUE>>=
toLatex(sessionInfo())
@


\end{document}
